"""Base message handlers"""
import logging
import traceback
from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message

from src.core.config import Config
from src.bot.keyboards import get_main_keyboard

logger = logging.getLogger(__name__)

async def start_command(message: Message):
    """Handle /start command"""
    try:
        user_id = message.from_user.id
        username = message.from_user.username or "Unknown"
        logger.info(f"=== –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start ===")
        logger.info(f"–û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {username} (ID: {user_id})")

        welcome_message = (
            f"üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n\n"
            "–Ø —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –∑–∞–¥–∞—á. "
            "–Ø –∏—Å–ø–æ–ª—å–∑—É—é –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ:\n\n"
            "‚úÖ –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á–∏\n"
            "üìã –†–∞–∑–±–∏–≤–∞—Ç—å –∏—Ö –Ω–∞ –ø–æ–¥–∑–∞–¥–∞—á–∏\n"
            "‚è∞ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —Å—Ä–æ–∫–∏\n"
            "üîî –ù–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ –≤–∞–∂–Ω—ã—Ö –¥–µ–ª–∞—Ö\n\n"
            "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ —Å–≤–æ—é –∑–∞–¥–∞—á—É, –∏ —è –ø–æ–º–æ–≥—É –µ—ë –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å!"
        )

        await message.answer(
            welcome_message,
            reply_markup=get_main_keyboard()
        )
        logger.info("‚úì –ö–æ–º–∞–Ω–¥–∞ /start –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")

    except Exception as e:
        error_msg = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /start: {str(e)}"
        logger.error(error_msg)
        logger.error(traceback.format_exc())
        await message.answer(
            "üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )

async def help_command(message: Message):
    """Handle /help command"""
    try:
        user_id = message.from_user.id
        username = message.from_user.username or "Unknown"
        logger.info(f"=== –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /help ===")
        logger.info(f"–û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {username} (ID: {user_id})")

        help_message = (
            "ü§ñ <b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:</b>\n\n"
            "1Ô∏è‚É£ <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏:</b>\n"
            "   ‚Ä¢ –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à—É –∑–∞–¥–∞—á—É\n"
            "   ‚Ä¢ –Ø –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é –µ—ë –∏ –ø–æ–º–æ–≥—É –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å\n\n"
            "2Ô∏è‚É£ <b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
            "   /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n"
            "   /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
            "   /tasks - –°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –∑–∞–¥–∞—á\n"
            "   /settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏\n\n"
            "3Ô∏è‚É£ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏:</b>\n"
            "   ‚Ä¢ –û—Ç–º–µ—á–∞–π—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏\n"
            "   ‚Ä¢ –ü–æ–ª—É—á–∞–π—Ç–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è\n"
            "   ‚Ä¢ –°–ª–µ–¥–∏—Ç–µ –∑–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º\n\n"
            "4Ô∏è‚É£ <b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:</b>\n"
            "   ‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –∑–∞–¥–∞—á–∏: {min_len} —Å–∏–º–≤–æ–ª–æ–≤\n"
            "   ‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞: {max_len} —Å–∏–º–≤–æ–ª–æ–≤\n"
            "   ‚Ä¢ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: –∑–∞ {reminder} –º–∏–Ω—É—Ç –¥–æ –¥–µ–¥–ª–∞–π–Ω–∞\n"
        ).format(
            min_len=Config.MIN_TASK_LENGTH,
            max_len=Config.MAX_TASK_LENGTH,
            reminder=Config.DEFAULT_REMINDER_MINUTES
        )

        await message.answer(
            help_message,
            reply_markup=get_main_keyboard()
        )
        logger.info("‚úì –ö–æ–º–∞–Ω–¥–∞ /help –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")

    except Exception as e:
        error_msg = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /help: {str(e)}"
        logger.error(error_msg)
        logger.error(traceback.format_exc())
        await message.answer(
            "üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )

def register_base_handlers(router: Router):
    """Register base message handlers"""
    try:
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
        router.message.register(
            start_command,
            Command(commands=["start"])
        )
        logger.debug("‚úì –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start")

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
        router.message.register(
            help_command,
            Command(commands=["help"])
        )
        logger.debug("‚úì –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –±–∞–∑–æ–≤—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤: {str(e)}")
        raise